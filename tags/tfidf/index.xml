<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TFIDF on Johnny's Blog</title><link>https://lijohnny.com/tags/tfidf/</link><description>Recent content in TFIDF on Johnny's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 May 2021 21:24:32 -0700</lastBuildDate><atom:link href="https://lijohnny.com/tags/tfidf/index.xml" rel="self" type="application/rss+xml"/><item><title>Disaster Response Web App</title><link>https://lijohnny.com/p/disaster-response-web-app/</link><pubDate>Sun, 02 May 2021 21:24:32 -0700</pubDate><guid>https://lijohnny.com/p/disaster-response-web-app/</guid><description>Disaster Response Web Application is a Web app that can help emergency organizations analyze incoming messages and classify the messages into specific categories (e.g. Water, Food, Hospitals, Aid-Related) during a disaster event. The app is based on Nature Language Processing and Random Forest Classifier ML model. The data was collected by Figure Eight and provided by Udacity.
The techniques I used in this project include:
SQLite in Python Bag of Words (BOW) Multilabel classification Build Machine Learning Pipeline Grid Search Cross Validation Random Forest Classifier K nearest neighbors (KNN) Build a Flask web app You can find the full analysis in my GitHub repo.</description></item></channel></rss>