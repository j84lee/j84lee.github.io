<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Johnny's Blog</title><link>https://lijohnny.com/</link><description>Recent content on Johnny's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 12 Mar 2021 21:42:22 -0800</lastBuildDate><atom:link href="https://lijohnny.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Identify Customer Segments</title><link>https://lijohnny.com/p/identify-customer-segments/</link><pubDate>Fri, 12 Mar 2021 21:42:22 -0800</pubDate><guid>https://lijohnny.com/p/identify-customer-segments/</guid><description>&lt;img src="https://i.loli.net/2021/03/13/7dfc3OoaYZAnejX.jpg" alt="Featured image of post Identify Customer Segments" />&lt;p>This is one of the Udacity Data Scientist Nanodegree Project. This project aims to identify segments of the population from the core customer base for a mail-order sales company in Germany. Therefore, these segments can then be used to direct marketing campaigns towards audiences with the highest expected rate of returns.&lt;/p>
&lt;p>The techniques I used in this project include:&lt;/p>
&lt;ol>
&lt;li>Data cleaning&lt;/li>
&lt;li>Encoding and processing mixed-type feature&lt;/li>
&lt;li>Feature Scaling and Dimensionality Reduction&lt;/li>
&lt;li>Clustering&lt;/li>
&lt;li>Performance improvement with OpenBLAS&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>You can find the full analysis in &lt;a class="link" href="https://github.com/iamjohnnyli/identify-customer-segments/blob/main/Identify_Customer_Segments.ipynb" target="_blank" rel="noopener"
>my GitHub repo&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="data">Data&lt;/h2>
&lt;p>The data files associated with this project (not included in this repository):&lt;/p>
&lt;ul>
&lt;li>&lt;code>Udacity_AZDIAS_Subset.csv&lt;/code>: Demographics data for the general population of Germany; 891,211 persons (rows) x 85 features (columns).&lt;/li>
&lt;li>&lt;code>Udacity_CUSTOMERS_Subset.csv&lt;/code>: Demographics data for customers of a mail-order company; 191,652 persons (rows) x 85 features (columns).&lt;/li>
&lt;li>&lt;code>Data_Dictionary.md&lt;/code>: Detailed information file about the features in the provided datasets.&lt;/li>
&lt;li>&lt;code>AZDIAS_Feature_Summary.csv&lt;/code>: Summary of feature attributes for demographics data; 85 features (rows) x 4 columns&lt;/li>
&lt;/ul>
&lt;h2 id="analysis-structure">Analysis Structure&lt;/h2>
&lt;ol>
&lt;li>Data exploration and data cleaning (85% of the analysis)&lt;/li>
&lt;li>Feature Engineering (One Hot, Scaling, and PCA)&lt;/li>
&lt;li>Clustering with k-means&lt;/li>
&lt;/ol>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 221; flex-basis: 530px">
&lt;a href="https://lijohnny.com/p/identify-customer-segments/Figure1.png" data-size="615x278">&lt;img src="https://lijohnny.com/p/identify-customer-segments/Figure1.png"
srcset="https://lijohnny.com/p/identify-customer-segments/Figure1_hudb085fa3cbbe78a5c1f4dd5854a76d63_10999_480x0_resize_box_2.png 480w, https://lijohnny.com/p/identify-customer-segments/Figure1_hudb085fa3cbbe78a5c1f4dd5854a76d63_10999_1024x0_resize_box_2.png 1024w"
width="615"
height="278"
loading="lazy"
alt="Figure 1. Proportions per cluster for general vs customer.">
&lt;/a>
&lt;figcaption>Figure 1. Proportions per cluster for general vs customer.&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>I use the elbow method to find that 6 is the optimal number for clustering, which means the model segments customers and the general population into 6&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> groups. We can find the proportion of customers in cluster 2 is higher than the general population, which suggests people in cluster 2 are the target audience. We also find that, in cluster 3, the customer is underrepresented, which means people in that group are outside of the target demographics.&lt;/p>
&lt;p>&lt;figure style="flex-grow: 390; flex-basis: 936px">
&lt;a href="https://lijohnny.com/p/identify-customer-segments/Figure2.png" data-size="2299x589">&lt;img src="https://lijohnny.com/p/identify-customer-segments/Figure2.png"
srcset="https://lijohnny.com/p/identify-customer-segments/Figure2_hue29e5bf3277d24f23bccf99a1420d40f_76006_480x0_resize_box_2.png 480w, https://lijohnny.com/p/identify-customer-segments/Figure2_hue29e5bf3277d24f23bccf99a1420d40f_76006_1024x0_resize_box_2.png 1024w"
width="2299"
height="589"
loading="lazy"
alt="Figure 2. Major differences between Cluster 2 and Cluster 3">
&lt;/a>
&lt;figcaption>Figure 2. Major differences between Cluster 2 and Cluster 3&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Comparing 2 segments, we can find there are some key differences. For example:&lt;/p>
&lt;ul>
&lt;li>Distance from building to point of sale: People in cluster 3 are closer to Pos then people in cluster 2.&lt;/li>
&lt;li>Wealth / Life Stage Typology: More people in cluster 2 are upper class&lt;/li>
&lt;li>Type of Building: Most builds in cluster 2 are residential build.&lt;/li>
&lt;li>Social status: Most people in cluster 2 are top earners and most people in cluster 3 are house owners.&lt;/li>
&lt;/ul>
&lt;h2 id="licensing-and-acknowledgements">Licensing and Acknowledgements&lt;/h2>
&lt;p>Udacity Data Scientist provided the starting code for this project.
Udacity partners at Bertelsmann Arvato Analytics provided the data.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Cluster -1 is the group I add for checking the proportion of data that miss more than 30% information. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Switch from Hexo to Hugo</title><link>https://lijohnny.com/p/switch-from-hexo-to-hugo/</link><pubDate>Wed, 03 Mar 2021 20:03:50 +0000</pubDate><guid>https://lijohnny.com/p/switch-from-hexo-to-hugo/</guid><description>&lt;img src="https://lijohnny.com/p/switch-from-hexo-to-hugo/bg2.png" alt="Featured image of post Switch from Hexo to Hugo" />&lt;p>It&amp;rsquo;s been a year since last time I update my blog. Recently, I want to get back to writing blog again. However, I encounter some issues.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://hexo.io/" target="_blank" rel="noopener"
>Hexo&lt;/a>, the static web generator I used, was not compatible with current node.js version in my system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Somehow node.js was extremely slow in WSL2.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I prefer working with the language that I&amp;rsquo;m more familiar with.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Therefore, I start looking for other solutions. After comparing and trying several static web generators. I picked Hugo. The reason is sample. Hugo is fast, and I find the theme I like.&lt;/p>
&lt;p>Here is the screenshot for my perverse website. Hexo has tens of theme too. But I didn&amp;rsquo;t find one fit me needs. So, I created my own theme. The design is based on &lt;a class="link" href="https://demos.creative-tim.com/material-kit/" target="_blank" rel="noopener"
>Material Kit&lt;/a>.&lt;/p>
&lt;p>&lt;figure style="flex-grow: 97; flex-basis: 233px">
&lt;a href="https://lijohnny.com/p/switch-from-hexo-to-hugo/Screenshot.png" data-size="1176x1211">&lt;img src="https://lijohnny.com/p/switch-from-hexo-to-hugo/Screenshot.png"
srcset="https://lijohnny.com/p/switch-from-hexo-to-hugo/Screenshot_hu35e393f0d3b7c807b28ca9485ad3df19_786367_480x0_resize_box_2.png 480w, https://lijohnny.com/p/switch-from-hexo-to-hugo/Screenshot_hu35e393f0d3b7c807b28ca9485ad3df19_786367_1024x0_resize_box_2.png 1024w"
width="1176"
height="1211"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p></description></item><item><title>Donors Identification for CharityML</title><link>https://lijohnny.com/p/donors-identification-for-charityml/</link><pubDate>Thu, 30 May 2019 01:03:50 +0000</pubDate><guid>https://lijohnny.com/p/donors-identification-for-charityml/</guid><description>&lt;img src="https://i.loli.net/2019/05/30/5cef9192b167778174.jpg" alt="Featured image of post Donors Identification for CharityML" />&lt;p>&lt;a class="link" href="https://lijohnny.com" target="_blank" rel="noopener"
>&lt;img src="https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg" alt="" />&lt;/a> &lt;a class="link" href="https://www.python.org/" target="_blank" rel="noopener"
>&lt;img src="https://img.shields.io/badge/Made%20with-Python-1f425f.svg" alt="" />&lt;/a> &lt;a class="link" href="" >&lt;img src="https://img.shields.io/badge/Kaggle-Project-blue.svg" alt="" />&lt;/a>&lt;/p>
&lt;p>In this project, I built machine learning models that best identifies potential donors for CharityML(a fictitious charity organization) with data collected for the U.S. census. To find the best approach, I performed EDA, feature engineering, and building training and predicting pipeline to evaluate and optimize the performance between different machine learning models.&lt;/p>
&lt;p>The modified census dataset consists of approximately 32,000 data points, with each datapoint having 13 features. This dataset is a modified version of the dataset published in the paper &lt;em>&amp;ldquo;Scaling Up the Accuracy of Naive-Bayes Classifiers: a Decision-Tree Hybrid&amp;rdquo;,&lt;/em> by Ron Kohavi. You may find this paper &lt;a class="link" href="https://www.aaai.org/Papers/KDD/1996/KDD96-033.pdf" target="_blank" rel="noopener"
>online&lt;/a>, with the original dataset hosted on &lt;a class="link" href="https://archive.ics.uci.edu/ml/datasets/Census&amp;#43;Income" target="_blank" rel="noopener"
>UCI&lt;/a>.&lt;/p>
&lt;p>The model I have used:&lt;/p>
&lt;ul>
&lt;li>SGD Classifier&lt;/li>
&lt;li>AdaBoost&lt;/li>
&lt;li>Logistic Regression&lt;/li>
&lt;/ul>
&lt;p>You can see the code(iPython notebook) &lt;a class="link" href="https://github.com/iamjohnnyli/udacity-data-scientist-nanodegree/blob/master/Supervised/Project-CharityML/finding_donors_done.ipynb" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p></description></item><item><title>Automate Image Processing for My Blog</title><link>https://lijohnny.com/p/automate-image-processing-for-my-blog/</link><pubDate>Sat, 11 May 2019 22:28:30 +0000</pubDate><guid>https://lijohnny.com/p/automate-image-processing-for-my-blog/</guid><description>&lt;img src="https://i.loli.net/2019/05/12/5cd7b069e734a.jpg" alt="Featured image of post Automate Image Processing for My Blog" />&lt;blockquote>
&lt;p>:warning:The old cript is &lt;code>DEPRECATED&lt;/code>. I switch to FastAPI, and updated the code &lt;a class="link" href="https://github.com/iamjohnnyli/blog-image-processing-automation" target="_blank" rel="noopener"
>here&lt;/a>. The old code is now in &lt;a class="link" href="https://github.com/iamjohnnyli/blog-image-processing-automation/tree/V1.0" target="_blank" rel="noopener"
>v1.0 Branch&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>As you can see, my blog contains cover images. Every time I write an article I need to upload a cover image to the image server. However, the process is complicated and trivial. I need to crop the image to a certain proportion and resize and compress the image to reduce the loading time. Moreover, to put the photographer&amp;rsquo;s name on the image, I need to use other software. Therefore, I create two python scripts to automate the process.&lt;/p>
&lt;blockquote>
&lt;p>For more information and code script, please go to my &lt;a class="link" href="https://github.com/iamjohnnyli/blog-image-processing-automation/tree/V1.0" target="_blank" rel="noopener"
>GitHub page&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>These scripts are for automating the process of cropping, resizing, adding author&amp;rsquo;s information, compressing, and uploading an image.&lt;/p>
&lt;ul>
&lt;li>The compressing service I use &lt;a class="link" href="https://tinypng.com" target="_blank" rel="noopener"
>tinypng&lt;/a>&lt;/li>
&lt;li>The storage for image I user &lt;a class="link" href="https://sm.ms/" target="_blank" rel="noopener"
>sm.ms&lt;/a>&lt;/li>
&lt;li>This script works &lt;strong>only&lt;/strong> for the image download from &lt;a class="link" href="https://unsplash.com/" target="_blank" rel="noopener"
>unsplash.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>To use correctly, you need to create an &lt;code>api.txt&lt;/code> file that contains only the API key for &lt;a class="link" href="https://tinypng.com" target="_blank" rel="noopener"
>tinypng&lt;/a>. To generate an API key, you can check &lt;a class="link" href="https://tinypng.com/developers" target="_blank" rel="noopener"
>https://tinypng.com/developers&lt;/a>.&lt;/p>
&lt;p>&lt;code>main.py&lt;/code> can be easily run in the terminal with the command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Bash" data-lang="Bash">python main.py
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once it launched, you can drag and drop any image on it.&lt;/p>
&lt;p>&lt;code>automator.py&lt;/code> can be used in Mac&amp;rsquo;s Automator. By building a server with Automator, I can right click on any image and run the script, or use a shortcut to run the script.&lt;/p></description></item><item><title>Spam Detection and Analysis (Part 2 - Analysis with R)</title><link>https://lijohnny.com/p/spam-detection-and-analysis-part-2-analysis-with-r/</link><pubDate>Thu, 09 May 2019 21:47:43 +0000</pubDate><guid>https://lijohnny.com/p/spam-detection-and-analysis-part-2-analysis-with-r/</guid><description>&lt;img src="https://i.loli.net/2019/05/10/5cd5051a0e1f9.png" alt="Featured image of post Spam Detection and Analysis (Part 2 - Analysis with R)" />&lt;p>Spam is still a common attack method. Most of the email services have spam filters that can help us block and filter out most of the emails with commercial, fraudulent and malicious content. The purpose of the project is to explore and analyze the email header to identify the features that can tell us which emails are malicious.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>This is the Part 2 of the series. For how to parsing email, please check &lt;a class="link" href="https://lijohnny.com/p/spam-detection-and-analysis-part-1-parsing/" >Part 1&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="data-exploration">Data Exploration&lt;/h2>
&lt;h3 id="import-the-data-to-r">Import the data to R&lt;/h3>
&lt;p>For This part of the script, I used &lt;strong>R language&lt;/strong> to explore the data and the build model. Therefore We need to import CSV to R first.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">em&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">read.csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;gamilspamedited.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">stringsAsFactors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">F&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>'data.frame': 272 obs. of 18 variables:
$ Subject : chr
$ Return.Path.Address: chr
$ Date : chr
$ Reply.To.Address : chr
$ Content.Type : chr
$ From.Address : chr
$ IP : chr
$ SPF : chr
$ DMARC : chr
$ DKIM : chr
$ Country : chr
$ Regin : chr
$ City : chr
$ IPv6.Indicator : int
$ CAT : chr
$ Reputation : chr
&lt;/code>&lt;/pre>
&lt;p>After cleaning the data, there are 272 entries and 18 columns left.&lt;/p>
&lt;h3 id="preprocess-the-date">Preprocess the date&lt;/h3>
&lt;h4 id="create-variables">Create Variables&lt;/h4>
&lt;p>Create &lt;code>hashtml&lt;/code> and &lt;code>hasattach&lt;/code> columns to label if the email use html for main content and if the email has attachment.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hashtml.func&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">case_when&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;multipart/alternative&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;multipart/mixed&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;multipart/related&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;text/html&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;text/plain&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hashtml&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">hashtml.func&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;Content.Type&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hasattach.func&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">case_when&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;multipart/alternative&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;multipart/mixed&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;multipart/related&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;text/html&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s">&amp;#34;text/plain&amp;#34;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hasattach&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">hasattach.func&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;Content.Type&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compare Email&amp;rsquo;s From address and reply address and label if they are different.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stringr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rpavsfrom.func&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">fa&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="n">x[&lt;/span>&lt;span class="s">&amp;#39;From.Address&amp;#39;&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="n">fa&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;@&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]][2]&lt;/span>
&lt;span class="n">fasplit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>
&lt;span class="n">fareal&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fasplit&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fasplit&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rp&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="n">x[&lt;/span>&lt;span class="s">&amp;#39;Return.Path.Address&amp;#39;&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="n">rp&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;@&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]][2]&lt;/span>
&lt;span class="n">rpsplit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>
&lt;span class="n">rpreal&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rpsplit&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rpsplit&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fareal&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">rpreal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="n">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nf">return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">rpavsfrom&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">rpavsfrom.func&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stringr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">replyvsfrom.func&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">fa&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="n">x[&lt;/span>&lt;span class="s">&amp;#39;From.Address&amp;#39;&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="n">fa&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;@&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]][2]&lt;/span>
&lt;span class="n">fasplit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>
&lt;span class="n">fareal&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fasplit&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fa&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fasplit&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ra&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="n">x[&lt;/span>&lt;span class="s">&amp;#39;Reply.To.Address&amp;#39;&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="n">ra&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ra&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;@&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]][2]&lt;/span>
&lt;span class="n">rasplit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ra&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>
&lt;span class="n">rareal&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ra&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rasplit&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ra&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;[.]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="nf">[&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rasplit&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fareal&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">rareal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="n">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nf">return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">replyvsfrom&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">replyvsfrom.func&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bin and Categorize the Time and the Day.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lubridate&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">weekday.func&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">weekday&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">wday&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">as.Date&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]][1]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;%m/%d/%Y&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weekday&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">weekday.func&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;Date&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Mon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Tue&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Wed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Thu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Fri&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Sat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Sun&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">time.func&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">time&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">gsub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">str_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x[c1]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]][2]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Time&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">time.func&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;Date&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Time&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Convert the data to proper formats.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">SPF&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">SPF&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;neutral&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;fail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;temperror&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DMARC&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DMARC&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;fail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;None&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DKIM&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DKIM&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;None&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">IPv6.Indicator&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">IPv6.Indicator&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">CAT&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">CAT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hashtml&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hashtml&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hasattach&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hasattach&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">rpavsfrom&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">rpavsfrom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">replyvsfrom&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">replyvsfrom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Set base level.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">relevel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ref&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;US&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">relevel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ref&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Unsuspicious&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Re-code the target to numeric.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">CAT&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">CAT&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;Spam&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Explore the Relationship.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">11&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">selected.var&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">17&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">18&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">19&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">21&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">23&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">24&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">selected.df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">em[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">selected.var]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">emnum&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="n">selected.df&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">SPF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">SPF&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">SPF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DMARC&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DMARC&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DMARC&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DKIM&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DKIM&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">DKIM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Country&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">IPv6.Indicator&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">IPv6.Indicator&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">IPv6.Indicator&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Reputation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hashtml&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hashtml&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hashtml&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hasattach&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hasattach&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hasattach&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">rpavsfrom&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">rpavsfrom&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">rpavsfrom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">replyvsfrom&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">replyvsfrom&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">replyvsfrom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;7&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Weekday&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;7&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;11&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;12&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;13&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;14&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;15&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;16&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;17&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;18&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;19&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;21&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;22&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;23&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;24&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;25&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Time&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.numeric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selected.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create correlation matrix.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;PerformanceAnalytics&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">chart.Correlation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emnum&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;spearman&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">histogram&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;16&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://ws1.sinaimg.cn/large/006tNc79ly1g280ych5v7j30nc0nc3yv.jpg" alt="png" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">corrr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emnum&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">cor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;spearman&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">network_plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_cor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0.1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://ws4.sinaimg.cn/large/006tNc79ly1g280yddafpj30nc0ncwfs.jpg" alt="png" />&lt;/p>
&lt;h2 id="build-model">Build Model&lt;/h2>
&lt;h3 id="partition-data">Partition Data&lt;/h3>
&lt;p>Create Training and Validation Sets&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="c1"># partition the data&lt;/span>
&lt;span class="n">train.index&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">sample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="m">0.6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">train.df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">selected.df[train.index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">]&lt;/span>
&lt;span class="n">valid.df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">selected.df[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">train.index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fit a Logistic Regression Model&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">logit.reg&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">glm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CAT&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Message&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">DMARC&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">Country&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">DKIM&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">Reputation&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">replyvsfrom&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">rpavsfrom&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">Weekday&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">train.df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;binomial&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">summary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">logit.reg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Call:
glm(formula = CAT ~ Message + DMARC + Country + DKIM + Reputation +
replyvsfrom + rpavsfrom + Weekday, family = &amp;quot;binomial&amp;quot;, data = train.df)
Deviance Residuals:
Min 1Q Median 3Q Max
-3.09465 -0.18311 -0.04540 -0.00298 2.73259
Coefficients:
Estimate Std. Error z value Pr(&amp;gt;|z|)
(Intercept) -4.880e+00 1.891e+00 -2.581 0.009848 **
Message -2.864e-05 1.803e-05 -1.589 0.112145
DMARC2 -1.101e+01 2.400e+03 -0.005 0.996340
DMARC3 6.306e+00 1.445e+00 4.364 1.28e-05 ***
Country2 4.332e+00 1.767e+00 2.451 0.014247 *
DKIM2 -3.987e+00 2.255e+00 -1.768 0.077077 .
Reputation2 9.137e+00 2.607e+00 3.505 0.000457 ***
replyvsfrom2 -5.052e+00 1.214e+00 -4.162 3.16e-05 ***
rpavsfrom2 -2.141e+00 1.044e+00 -2.052 0.040209 *
Weekday2 3.313e+00 1.764e+00 1.878 0.060359 .
Weekday3 3.392e+00 1.544e+00 2.197 0.028011 *
Weekday4 6.549e-01 1.684e+00 0.389 0.697268
Weekday5 5.326e+00 1.607e+00 3.315 0.000918 ***
Weekday6 1.686e+00 1.216e+00 1.387 0.165409
Weekday7 2.898e+00 1.634e+00 1.773 0.076224 .
---
Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
(Dispersion parameter for binomial family taken to be 1)
Null deviance: 172.126 on 162 degrees of freedom
Residual deviance: 56.569 on 148 degrees of freedom
AIC: 86.569
Number of Fisher Scoring iterations: 15
&lt;/code>&lt;/pre>
&lt;p>Predict with validation dataset and find the best threshold.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="n">logit.reg.pred&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">logit.reg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">valid.df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;response&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pROC&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">roc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valid.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">CAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">logit.reg.pred&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">plot.roc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pred&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">ifelse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">logit.reg.pred&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">coords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;best&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[[1]]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">coords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;best&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Type 'citation(&amp;quot;pROC&amp;quot;)' for a citation.
Attaching package: 'pROC'
The following objects are masked from 'package:stats':
cov, smooth, var
threshold specificity sensitivity
0.3222076 0.9625000 0.9655172
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://ws1.sinaimg.cn/large/006tNc79ly1g280ydomsdj30nc0nc3yf.jpg" alt="" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">caret&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">confusionMatrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valid.df&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">CAT&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">positive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Loading required package: lattice
Loading required package: ggplot2
Confusion Matrix and Statistics
Reference
Prediction 0 1
0 77 1
1 3 28
Accuracy : 0.9633
95% CI : (0.9087, 0.9899)
No Information Rate : 0.7339
P-Value [Acc &amp;gt; NIR] : 2.433e-10
Kappa : 0.9081
Mcnemar's Test P-Value : 0.6171
Sensitivity : 0.9655
Specificity : 0.9625
Pos Pred Value : 0.9032
Neg Pred Value : 0.9872
Prevalence : 0.2661
Detection Rate : 0.2569
Detection Prevalence : 0.2844
Balanced Accuracy : 0.9640
'Positive' Class : 1
&lt;/code>&lt;/pre></description></item><item><title>Spam Detection and Analysis (Part 1 - Parsing)</title><link>https://lijohnny.com/p/spam-detection-and-analysis-part-1-parsing/</link><pubDate>Fri, 19 Apr 2019 01:24:59 +0000</pubDate><guid>https://lijohnny.com/p/spam-detection-and-analysis-part-1-parsing/</guid><description>&lt;img src="https://i.loli.net/2019/05/10/5cd50420b955f.png" alt="Featured image of post Spam Detection and Analysis (Part 1 - Parsing)" />&lt;p>Spam is still a common attack method. Most of the email services have spam filters that can help us block and filter out most of the emails with commercial, fraudulent and malicious content. The purpose of the project is to explore and analyze the email header to identify the features that can tell us which emails are malicious.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="get-email-header-information">Get Email Header information&lt;/h2>
&lt;p>First thing we need to do is the get the data. Email Header contents a lots of information that usually a email client do not show that to the users. However, most of those informations reveal more information about the sender. Therefore, we need to get Email Headers and parsing them for analysis.
I use Python&amp;rsquo;s &lt;code>imaplib&lt;/code> library to get email headers from my Gmail account Spam folder.&lt;/p>
&lt;blockquote>
&lt;p>For the script to work, Gmail IMAP Access need to be enabled. To enable IMAP for Gmail, please check this &lt;a class="link" href="https://support.google.com/mail/answer/7126229" target="_blank" rel="noopener"
>instruction&lt;/a>. You also need to either turn off 2-Step Verification for your Google account or set up an app password &lt;a class="link" href="https://myaccount.google.com/u/1/security" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="setup-connection">Setup connection&lt;/h3>
&lt;ol>
&lt;li>Import the required libraries.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">getpass&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">imaplib&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">email&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">email.parser&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">HeaderParser&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">email.header&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">decode_header&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">csv&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="kn">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">bs4&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">BeautifulSoup&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Login to the Gmail&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Email:&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">un&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Password&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getpass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getpass&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># hide passowrad with getpass() function.&lt;/span>
&lt;span class="n">conn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">imaplib&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">IMAP4_SSL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;993&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;imap.gmail.com&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">un&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pw&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="download-email-and-parsing-email-header">Download Email and Parsing Email Header&lt;/h3>
&lt;ol>
&lt;li>Get email list.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;[Gmail]/Spam&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Get email form spam folder.&lt;/span>
&lt;span class="nb">type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">emaildata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;ALL&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">emaillist&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">emaildata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># Get email list.&lt;/span>
&lt;span class="n">parser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">HeaderParser&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">header_list&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[]&lt;/span>
&lt;span class="n">msg_text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[]&lt;/span>
&lt;span class="c1"># Read API key for ipstack.com from key.txt file.&lt;/span>
&lt;span class="n">key_f&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key.txt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">key_f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Parsing email&lt;/li>
&lt;/ol>
&lt;p>Usually an email header looks like this:
&lt;!-- raw HTML omitted -->
What we want are:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Subject&lt;/code>&lt;/td>
&lt;td>The Subject of Email&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Reply-To&lt;/code>&lt;/td>
&lt;td>The reply address that when you click reply button in you Email client&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Return-Path&lt;/code>&lt;/td>
&lt;td>The reply address that when you click reply button in you Email client&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>IP&lt;/code>&lt;/td>
&lt;td>The sender&amp;rsquo;s IP address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Received Time&lt;/code>&lt;/td>
&lt;td>When is the email received&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>From&lt;/code>&lt;/td>
&lt;td>The senders&amp;rsquo;s address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Date&lt;/code>&lt;/td>
&lt;td>The date the message was sent&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Content-Type&lt;/code>&lt;/td>
&lt;td>Indicated what contents in the email&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Message&lt;/code>&lt;/td>
&lt;td>The email content&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>DMARC&lt;/code>&lt;/td>
&lt;td>Domain-Based Message Authentication Reporting and Conformance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>DKIM&lt;/code>&lt;/td>
&lt;td>Domain Keys Identified Mail&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ARC-Authentication-Results&lt;/code>&lt;/td>
&lt;td>Authenticated Received Chain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPF&lt;/code>&lt;/td>
&lt;td>Sender Policy Framework&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Now we need to parse each email in the emaillist by using for loop.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">emaillist&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="nb">type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">emaildata2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;(RFC822)&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">parser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parsestr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emaildata2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;ignore&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some emails have an html format message. The html tags are not helping us in this project. Therefore, we can use &lt;code>BeautifulSoup&lt;/code> to get text from the email message.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">for&lt;/span> &lt;span class="n">txt&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">walk&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">txt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_multipart&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="n">msg_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">txt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_payload&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">True&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;ignore&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">soup&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BeautifulSoup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg_text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lxml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">msg_text&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Most information is clear and do not need clean and edit.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Subject&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">decode_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Subject&amp;#39;&lt;/span>&lt;span class="p">])[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ARC-Authentication-Results&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ARC-Authentication-Results&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Return-Path&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Return-Path&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Return-Path Address&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\b@\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Return-Path&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Received&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Received&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Received-SPF&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Received-SPF&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Date&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Date&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;Reply-To&amp;#39;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Reply-To&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Reply-To&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Reply-To Address&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\b@\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Reply-To&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Reply-To&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Reply-To Address&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, for the data contents many irrelevant information and need to be cleaned. I use Regular expression operations to extract only useful information.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="k">if&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\b@\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">())):&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From Address&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\b@\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From Address&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="c1">#header[&amp;#39;Sender-ip&amp;#39;]= re.findall(r&amp;#39;(?:(?:25[0-5]|2[0-4]\d|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)&amp;#39;,str(header))&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Message&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg_text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bip=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;IP&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bip=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;IP&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bspf=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;SPF&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bspf=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;SPF&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bdmarc=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;DMARC&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bdmarc=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;DMARC&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bdkim=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;DKIM&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\bdkim=\S*\b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">))[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;DKIM&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I use the api of ipstack.com to convert IP to geographic location.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python"> &lt;span class="n">address&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;http://api.ipstack.com/&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;IP&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;?access_key=&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">key&lt;/span>
&lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ipjason&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>
&lt;span class="n">iplist&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ipjason&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Country&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">iplist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;country_name&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Regin&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">iplist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;region_name&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;City&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">iplist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;city&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">iplist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;ipv6&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;IPv6 Indicator&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">iplist&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;ipv4&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span>
&lt;span class="n">header&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;IPv6 Indicator&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">header_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># For Loop END&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For consistent analysis, I save the DataFrame into a CSV file for further analysis.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">header_list&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;File Name:&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fn&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39;.csv&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;w&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">output_file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dict_writer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DictWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">keys&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dict_writer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeheader&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">dict_writer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writerows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header_list&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>This is the Part 1 of the series. For how to user R analysis the email, please check &lt;a class="link" href="https://lijohnny.com/p/spam-detection-and-analysis-part-2-analysis-with-r/" >Part 2&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Solve the Problem in a April Fool's Joke</title><link>https://lijohnny.com/p/solve-the-problem-in-a-april-fools-joke/</link><pubDate>Sat, 06 Apr 2019 14:35:05 +0000</pubDate><guid>https://lijohnny.com/p/solve-the-problem-in-a-april-fools-joke/</guid><description>&lt;img src="https://i.loli.net/2019/04/27/5cc38cc539c01.jpg" alt="Featured image of post Solve the Problem in a April Fool's Joke" />&lt;p>On April 1st, one of the post on &lt;a class="link" href="https://www.v2ex.com/t/550870" target="_blank" rel="noopener"
>v2ex&lt;/a> (An online community of developers and designers in China&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>) become viral. The &lt;a class="link" href="https://www.v2ex.com/t/550870" target="_blank" rel="noopener"
>post&lt;/a> title is &amp;ldquo;Seeking Dates&amp;rdquo; and it is posted on April 1st, so most reactions of this post are pointing out that this is the &amp;ldquo;new trap&amp;rdquo; of the recruiters.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Here is the translation:&lt;/p>
&lt;blockquote>
&lt;p>I am born and raised in Hangzhou. I am a science student at Zhejiang University &amp;hellip; I hope to find a man can pass the following test. &lt;strong>My Wechat ID is my Family name Lin followed with two prime number. The smaller prime number is in the front. The product of these two prime numbers 7140229933.&lt;/strong> If you can find my Wechat ID, I will sincerely date you. Bula bula bula &amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>Disregard if it is a joke, I think the question is interesting. So let&amp;rsquo;s solve it.&lt;/p>
&lt;p>The idea is using Exhaustive Method (Brute Force Method) to find two prime factors. However, 7,140,229,933 is a relatively large number. To find all prime number could take a long time. Since 7,140,229,933 is the product of two prime, one of the numbers must smaller than the &lt;strong>Square Root&lt;/strong> of it. Therefore the order of magnitude of range could reduce from $10^9$ to $10^4$.
Here is my solution.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># The input number&lt;/span>
&lt;span class="nb">input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7140229933&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">))):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">83777&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Total Time: {}s.&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="mi">83777&lt;/span>
&lt;span class="mi">85229&lt;/span>
&lt;span class="n">Total&lt;/span> &lt;span class="n">Time&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.01737499237060547&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So the two prime number are 83777 and 85229.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/wiki/V2EX" target="_blank" rel="noopener"
>https://zh.wikipedia.org/wiki/V2EX&lt;/a> &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Data Analysis with Docker</title><link>https://lijohnny.com/p/data-analysis-with-docker/</link><pubDate>Wed, 20 Mar 2019 02:02:28 +0000</pubDate><guid>https://lijohnny.com/p/data-analysis-with-docker/</guid><description>&lt;img src="https://i.loli.net/2019/04/27/5cc38cc0066e1.jpg" alt="Featured image of post Data Analysis with Docker" />&lt;p>Data Analysis is not all about reports or visualization. The correctness and reproducibility are also important for scientific research. A consistent environment is critical for reproducibility. There are several ways to achieve that. However, I find out using &lt;a class="link" href="%28https://www.docker.com/why-docker%29" >Docker&lt;/a> at any time can repeat the experiment in the same environment. It is easy to scale up and scale horizontally.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>My docker image is based on Ubuntu. It includes common Data Science tools such as Jupyter Notebook wiht Python 3 and R kernel. With the help of R Magic, I can run both Python and R in the same .ipynb file. To learn more about R Magic, you can click &lt;a class="link" href="https://www.datacamp.com/community/blog/jupyter-notebook-r?utm_source=adwords_ppc&amp;amp;utm_campaignid=1565261270&amp;amp;utm_adgroupid=67750485268&amp;amp;utm_device=c&amp;amp;utm_keyword=&amp;amp;utm_matchtype=b&amp;amp;utm_network=g&amp;amp;utm_adpostion=1t1&amp;amp;utm_creative=295208661496&amp;amp;utm_targetid=dsa-473406574235&amp;amp;utm_loc_interest_ms=&amp;amp;utm_loc_physical_ms=9033309&amp;amp;gclid=EAIaIQobChMIt5Xy39jq4AIVbiCtBh3FdQ4IEAAYASAAEgLEZ_D_BwE" target="_blank" rel="noopener"
>here&lt;/a>.
I also installed Nbextensions for Jupyter Notebook. For more information, you can click &lt;a class="link" href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener"
>here&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>You can find my Dockerfile in my &lt;a class="link" href="https://github.com/iamjohnnyli/data-analyst-notebook-docker" target="_blank" rel="noopener"
>GitHub Repository&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="how-to-use-my-dockerfile">HOW TO USE MY DOCKERFILE&lt;/h2>
&lt;h3 id="install-docker">Install Docker&lt;/h3>
&lt;p>The Docker community have an explicit tutorial about how to install Docker. Please check &lt;a class="link" href="https://www.docker.com/community-edition#/download" target="_blank" rel="noopener"
>here&lt;/a>&lt;/p>
&lt;h3 id="build">Build&lt;/h3>
&lt;p>In the terminal, direct to the folder that contains the dockerfile and run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker build -t data-analyst-notebook .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Don&amp;rsquo;t forget the &amp;ldquo;.&amp;rdquo; at the end. data-analyst-notebook is the name of the image. You can change to whatever you prefer.&lt;/p>
&lt;h3 id="start-server">Start server&lt;/h3>
&lt;p>I use following code to start server:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run --rm -p 8888:8888 -e &lt;span class="nv">JUPYTER_ENABLE_LAB&lt;/span>&lt;span class="o">=&lt;/span>yes -v ~/:/home/jovyan/work data-analyst-notebook
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There is more detailed instruction from &lt;a class="link" href="https://jupyter-docker-stacks.readthedocs.io/en/latest/" target="_blank" rel="noopener"
>User Guide on ReadTheDocs&lt;/a>&lt;/p>
&lt;p>If you feel like that the command is too long to run. You can add an alias to your .bashrc file like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">dslab&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;docker run -p 8888:8888 -e JUPYTER_ENABLE_LAB=yes -v ~/:/home/jovyan/work data-analyst-notebook&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can use &lt;code>dslab&lt;/code> in the terminal as a replacement for typing the long command.&lt;/p></description></item><item><title>Craigslist Vacation House Data Crawling</title><link>https://lijohnny.com/p/craigslist-vacation-house-data-crawling/</link><pubDate>Tue, 12 Feb 2019 01:13:34 -0800</pubDate><guid>https://lijohnny.com/p/craigslist-vacation-house-data-crawling/</guid><description>&lt;img src="https://i.loli.net/2019/05/12/5cd7d789264a1.jpg" alt="Featured image of post Craigslist Vacation House Data Crawling" />&lt;p>In this &lt;a class="link" href="https://github.com/iamjohnnyli/web-crawler-tutorial/tree/master/scrapy_craigslist" target="_blank" rel="noopener"
>tutorial&lt;/a> I use &lt;a class="link" href="https://scrapy.org/" target="_blank" rel="noopener"
>Scrapy&lt;/a> to collect data from Craigslist.com. Specifically, the data under craigslist.org/Seattle/housing/vacation rentals. You can find the page under the link: &lt;a class="link" href="https://seattle.craigslist.org/d/vacation%e2%80%90rentals/search/vac" target="_blank" rel="noopener"
>https://seattle.craigslist.org/d/vacation‐rentals/search/vac&lt;/a>&lt;/p>
&lt;p>In the example, I collected following information:&lt;/p>
&lt;ol>
&lt;li>Title&lt;/li>
&lt;li>Posted Date&lt;/li>
&lt;li>Rental Price&lt;/li>
&lt;li>Number of bedrooms&lt;/li>
&lt;li>Neighborhood&lt;/li>
&lt;li>Description&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>For more information or the code, please go to my &lt;a class="link" href="https://github.com/iamjohnnyli/web-crawler-tutorial/tree/master/scrapy_craigslist" target="_blank" rel="noopener"
>github page&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="preparation">PREPARATION&lt;/h2>
&lt;h3 id="installation">INSTALLATION&lt;/h3>
&lt;p>You can install scrapy through &lt;code>pip install&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ pip install scrapy
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or use &lt;code>conda install&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ conda install scrapy
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creat-project">CREAT PROJECT&lt;/h3>
&lt;p>Before we start coding, we can use &lt;code>scrapy startproject&lt;/code> command to quickly create a project.
In terminal or CMD, navigate to your desired folder and execute following command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ scrapy startproject scrapy_craigslist
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here &lt;em>scrapy_craigslist&lt;/em> is the name of the project.&lt;/p>
&lt;p>After that, we can use &lt;code>genspider&lt;/code> command to create a Scrapy Spider. Here, we name it vacation_rentals and designated a URL. We user craiglist.org Seattle vacation house list page as an example.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ scrapy genspider vacation_rentals seattle.craigslist.org/d/vacation‐rentals/search/vac
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a directory with the following structure:&lt;/p>
&lt;pre>&lt;code>─── scrapy_craigslist
├── __init__.py
├── __pycache__
│   ├── __init__.cpython-36.pyc
│   └── settings.cpython-36.pyc
├── items.py
├── middlewares.py
├── pipelines.py
├── settings.py
└── spiders
├── __init__.py
├── __pycache__
│   ├── __init__.cpython-36.pyc
│   └── vacation_rentals.cpython-36.pyc
└── vacation_rentals.py
&lt;/code>&lt;/pre>&lt;h2 id="editing">EDITING&lt;/h2>
&lt;p>Navigate to the spiders folder and open the spider py file in your favorite editor.
There are some pre written code, but you need to make sure that &lt;code>allowed_domains&lt;/code> and &lt;code>start_urls&lt;/code> are in the right form.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">scrapy&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">CarSpider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scrapy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Spider&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;car&amp;#39;&lt;/span>
&lt;span class="n">allowed_domains&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;craigslist.org&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">start_urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;https://seattle.craigslist.org/d/vacation‐rentals/search/vac/&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">pass&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s write our own code under &lt;code>def parse(self, response):&lt;/code>. You can check the code &lt;a class="link" href="https://github.com/iamjohnnyli/web-crawler-tutorial/blob/master/scrapy_craigslist/scrapy_craigslist/spiders/vacation_rentals.py" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">scrapy&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">scrapy&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Request&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">VacationRentalsSpider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scrapy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Spider&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;vacation_rentals&amp;#39;&lt;/span>
&lt;span class="n">allowed_domains&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;craigslist.org&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">start_urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;http://seattle.craigslist.org/d/vacation‐rentals/search/vac/&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="c1"># Extract all wrapper for each list item between &amp;lt;p class=&amp;#34;result-info&amp;#34;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span>
&lt;span class="n">vacs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;//p[@class=&amp;#34;result-info&amp;#34;]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Get next page button URL &amp;lt;a href=&amp;#34;/search/vac?s=120&amp;#34; class=&amp;#34;button next&amp;#34; title=&amp;#34;next page&amp;#34;&amp;gt;next &amp;amp;gt; &amp;lt;/a&amp;gt;&lt;/span>
&lt;span class="n">next_rel_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;//a[@class=&amp;#34;button next&amp;#34;]/@href&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># Get full address.&lt;/span>
&lt;span class="n">next_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">urljoin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">next_rel_url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Go through all the pages.&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">next_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Loop each item to extract title, posted date, rental price, number of bedrooms, and neighborhood&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">vac&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">vacs&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># Get title from &amp;lt;a&amp;gt;&amp;lt;/a&amp;gt; tag.&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vac&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a/text()&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># Get posted date from &amp;lt;time class=&amp;#34;result-date&amp;#34; datetime=&amp;#34;2019-03-06 18:34&amp;#34; title=&amp;#34;Wed 06 Mar 06:34:28 PM&amp;#34;&amp;gt;Mar 6&amp;lt;/time&amp;gt; block. Use @datetime for attribute datetime.&lt;/span>
&lt;span class="n">pdate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vac&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;time/@datetime&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># Get rental price form &amp;lt;span class=&amp;#34;result-price&amp;#34;&amp;gt;$84&amp;lt;/span&amp;gt;&lt;/span>
&lt;span class="n">rprice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vac&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;span/span[@class=&amp;#34;result-price&amp;#34;]/text()&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># Get Number of bedrooms from &amp;lt;span class=&amp;#34;housing&amp;#34;&amp;gt;2br - 760ft&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; - &amp;lt;/span&amp;gt; and clean up the extra&lt;/span>
&lt;span class="n">nbedroom&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vac&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;span/span[@class=&amp;#34;housing&amp;#34;]/text()&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># Get Neighborhood from &amp;lt;span class=&amp;#34;result-hood&amp;#34;&amp;gt; (*** - *****)&amp;lt;/span&amp;gt;&lt;/span>
&lt;span class="n">hood&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;[()]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vac&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;span/span[@class=&amp;#34;result-hood&amp;#34;]/text()&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">()))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># Get the address of description page of each vacation house.&lt;/span>
&lt;span class="n">vacaddress&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vac&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a/@href&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract_first&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># We needed open the URL of each house and scrape the house description, while passing the meta to parse_page function.&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vacaddress&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;URL&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">vacaddress&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Title&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Posted Date&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">pdate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;Rental Price&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">rprice&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;Number of bedrooms&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">nbedroom&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Neighborhood&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">hood&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="c1"># Extract description page of the vacation house.&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_page&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="c1"># Pass the variables&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;URL&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Title&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pdate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Posted Date&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rprice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Rental Price&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">nbedroom&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Number of bedrooms&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hood&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Neighborhood&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Get the description.&lt;/span>
&lt;span class="n">description&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">line&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;//*[@id=&amp;#34;postingbody&amp;#34;]/text()&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extract&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">yield&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Title&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Posted Date&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">pdate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;Rental Price&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">rprice&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;Number of bedrooms&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">nbedroom&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Neighborhood&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">hood&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;Description&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">description&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="run-spider">RUN SPIDER&lt;/h3>
&lt;p>To put our spider to work, run &lt;code>crawl&lt;/code> command in terminal or CMD:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ scrapy crawl vacation_rentals -o result-titles.csv
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>-o&lt;/code> means out put data into file. &lt;code>result-titles.csv&lt;/code> is the files' name.&lt;/p></description></item></channel></rss>